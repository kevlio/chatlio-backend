Kunskapskontroll 3: Realtime-chatt
För att uppnå Godkänt är kraven att:
CHECK ● Backenden ska byggas med hjälp av Node och Socket.io
CHECK ● Den ska ha en tillhörande frontend
CHECK ● Den ska ha stöd för flera chatt-rum
CHECK ● Man ska kunna skapa och ta bort chattrum
CHECK ● När man tar bort ett chattrum ska även dess meddelande tas bort
CHECK ● Validera meddelande på backenden så att en användare inte kan skicka ett tomt meddelande
CHECK ● SQL/KNEX: Den ska spara meddelande och rum långsiktigt, i en databas
CHECK ● SQL/KNEX: Chattrum som skapas ska ha unika namn
CHECK ● SQL/KNEX: Varje meddelande ska ha info om vem som skrev det och när
CHECK ● Den ska innehålla en middleware som sparar loggar med relevant info i en eller enskilda filer (tidsstämpel, vem som skrev det, i vilken kanal)
---------------------------------------------------------------
För att uppnå Väl Godkänt är kraven att behöver du implementera minst 3 av följande kriterier:
CHECK ● Klienten ska visa alla användare som är aktiva i chatten/rummet
CHECK ● När någon skriver ska det finnas någon form av indikator att någon håller på att skriva ett meddelande (ex. “... skriver just nu”)
CHECK ● Det ska finnas stöd för att skicka emojis i meddelanden
---------------------------------------------------------------
Om tid finns:
● Det ska finnas stöd för att skicka direktmeddelande till andra användare
● Det ska finnas stöd för att skapa ett låst rum som kräver lösenord
● Man ska inte kunna ta bort ett lösenordsskyddat rum utan lösenordet
● Dela upp frontend i komponenter
● Ev. utveckla felhantering, undvika serverkrascher - utnyttja felmeddelande. 
--- Vissa problem med UNIQUE CONSTRAINT vid stresstest trots checkers, varför?
